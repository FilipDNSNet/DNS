#A list of comma separated attributes to be copied to OUT_Edges and OUT_UsedSegments.
edgeUserAttributes=

#A list of comma separated attributes to be copied to OUT_Nodes.
nodeUserAttributes=

#File containing (poly)lines representing trenches. (gis file name, including extension)
processInput.possibleTrenches.fileName=IN_PossibleTrenches.shp

#File containing (poly)lines representing trenches. (type of input)
processInput.possibleTrenches.fileType=SHAPE

#The maximum distance in meters at which nodes in trenches may be merged together. When this value is large, e.g. larger than the width of a street, it is possible that unforeseen nodes will be merged.
processInput.possibleTrenches.nodeMergerDistance=0.01

#The maximum distance in meters at which nodes in trenches may be merged together. When this value is large, e.g. larger than the width of a street, it is possible that unforeseen nodes will be merged. (unit of measurement)
processInput.possibleTrenches.nodeMergerDistance.unit=METER

#The maximum distance that a node may be moved to an edge to create a new intersection.
processInput.possibleTrenches.intersectionCreatorDistance=0.5

#The maximum distance that a node may be moved to an edge to create a new intersection. (unit of measurement)
processInput.possibleTrenches.intersectionCreatorDistance.unit=METER

#Attribute containing whether to include the line or not.
processInput.possibleTrenches.include=INCLUDE

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.possibleTrenches.avoid=AVOID

#Attribute containing the subtype of the line.
processInput.possibleTrenches.subtype=SUBTYPE

#Attribute linking related trenches to each other.
processInput.possibleTrenches.originalID=O_ID

#Attribute containing the name of the original street.
processInput.possibleTrenches.streetName=STREETNAME

#Attribute name for locked edges.
processInput.possibleTrenches.locked=LOCKED

#Name of the attribute containing the duct class.
processInput.possibleTrenches.ductClass=DUCT_CLASS

#Default value for the capacity
processInput.possibleTrenches.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.possibleTrenches.capacity.attribute=MAX_FIBERS

#Default value for the capacity
processInput.possibleTrenches.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.possibleTrenches.capacity.attribute=MAX_CABLES

#Default value for the capacity
processInput.possibleTrenches.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.possibleTrenches.capacity.attribute=MAX_DUCTS

#Attribute name for edges that cannot be crossed to.
processInput.possibleTrenches.skip_cross=SKIP_CROSS

#Attribute name for the street ID.
processInput.possibleTrenches.streetID=STREET_ID

#Attribute name for the gis tool ID.
processInput.possibleTrenches.gisToolID=GISTOOL_ID

#GIS source containing (poly)lines that represents crossings. (gis file name, including extension)
processInput.crossings.fileName=IN_Crossings.shp

#GIS source containing (poly)lines that represents crossings. (type of input)
processInput.crossings.fileType=SHAPE

#Apply filtering based on the 'INCLUDE' attribute?
processInput.crossings.filter.include=true

#Attribute linking related street crossings to each other.
processInput.crossings.junctionID=JNC_ID

#Name of the attribute containing the duct class.
processInput.crossings.ductClass=DUCT_CLASS

#Default value for the capacity
processInput.crossings.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.crossings.capacity.attribute=MAX_FIBERS

#Default value for the capacity
processInput.crossings.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.crossings.capacity.attribute=MAX_CABLES

#Default value for the capacity
processInput.crossings.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.crossings.capacity.attribute=MAX_DUCTS

#Attribute name for locked edges.
processInput.crossings.locked=LOCKED

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.crossings.avoid=AVOID

#Attribute containing whether to include the line or not.
processInput.crossings.include=INCLUDE

#Attribute name for the gis tool ID.
processInput.crossings.gisToolID=GISTOOL_ID

#Attribute containing the subtype of the line.
processInput.crossings.subtype=SUBTYPE

#Attribute containing the GisToolID of the original street.
processInput.crossings.streetID=STREET_ID

#Attribute name for edges that cannot be crossed to.
processInput.crossings.skip_cross=SKIP_CROSS

#File containing demand points. (gis file name, including extension)
processInput.demandPoints.fileName=IN_DemandPoints.shp

#File containing demand points. (type of input)
processInput.demandPoints.fileType=SHAPE

#Attribute containing number of required P2P living units.
processInput.demandPoints.livingUnits.p2p=P2P_HOMES

#Attribute containing number of required PON living units.
processInput.demandPoints.livingUnits.pon=PON_HOMES

#Attribute name for home counts.
processInput.demandPoints.customerNodeCounts=HOMECOUNT

#Attribute name for floor count per building.
processInput.demandPoints.floorCount=FLOORCOUNT

#Height of an object.
processInput.demandPoints.height=HEIGHT

#Attribute containing P2P adoption percentage.
processInput.demandPoints.adoptionPercentage.p2p=P2P_ADOP

#Attribute containing default P2P adoption percentage (range [0..100]).
processInput.demandPoints.adoptionPercentage.p2p.default=100.0

#Attribute containing PON adoption percentage.
processInput.demandPoints.adoptionPercentage.pon=PON_ADOP

#Attribute containing default PON adoption percentage (range [0..100]).
processInput.demandPoints.adoptionPercentage.pon.default=100.0

#Attribute containing P2P monthly revenue.
processInput.demandPoints.monthlyRevenue.p2p=P2P_M_REV

#Attribute containing default P2P monthly revenue.
processInput.demandPoints.monthlyRevenue.p2p.default=0.0

#Attribute containing PON monthly revenue.
processInput.demandPoints.monthlyRevenue.pon=PON_M_REV

#Attribute containing default PON monthly revenue.
processInput.demandPoints.monthlyRevenue.pon.default=0.0

#Attribute indicating whether to include the point or not.
processInput.demandPoints.include=INCLUDE

#Attribute indicating what the connection status of the demand point is.
processInput.demandPoints.connection=CONNECTION

#Attribute indicating a user defined type.
processInput.demandPoints.identifier=IDENTIFIER

#Attribute name for the point to building link.
processInput.demandPoints.buildingID=BLDG_ID

#Attribute name for the entry point ID.
processInput.demandPoints.entryPointID=ENTRY_P_ID

#Attribute containing the name of each street.
processInput.demandPoints.streetName=STREETNAME

#Name of the attribute containing the forced cable identifiers.
processInput.demandPoints.forced.cableIdentifier=FORCED_CBL

#Attribute name for the gis tool ID.
processInput.demandPoints.gisToolID=GISTOOL_ID

#Attribute name for locked nodes.
processInput.demandPoints.locked=LOCKED

#(Multi)point file containing the Central Office location(s). (gis file name, including extension)
processInput.centralOffice.fileName=IN_CentralOffice.shp

#(Multi)point file containing the Central Office location(s). (type of input)
processInput.centralOffice.fileType=SHAPE

#Attribute name for the required fibers.
processInput.centralOffice.fibers=FIBER_OUT

#Attribute name for the gis tool ID.
processInput.centralOffice.gisToolID=GISTOOL_ID

#Attribute containing the name of each street.
processInput.centralOffice.streetName=STREETNAME

#Attribute indicating whether to include the point or not.
processInput.centralOffice.include=INCLUDE

#(Multi)point file containing existing equipment location(s). (gis file name, including extension)
processInput.accessStructures.fileName=IN_AccessStructures.shp

#(Multi)point file containing existing equipment location(s). (type of input)
processInput.accessStructures.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.accessStructures.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.accessStructures.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.accessStructures.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.accessStructures.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.accessStructures.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.accessStructures.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.accessStructures.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.accessStructures.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.accessStructures.include=INCLUDE

#File containing the ManHole locations. (gis file name, including extension)
processInput.ManHole.fileName=IN_ManHoles.shp

#File containing the ManHole locations. (type of input)
processInput.ManHole.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.ManHole.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.ManHole.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.ManHole.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.ManHole.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.ManHole.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.ManHole.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.ManHole.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.ManHole.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.ManHole.include=INCLUDE

#File containing the HandHole locations. (gis file name, including extension)
processInput.HandHole.fileName=IN_HandHoles.shp

#File containing the HandHole locations. (type of input)
processInput.HandHole.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.HandHole.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.HandHole.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.HandHole.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.HandHole.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.HandHole.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.HandHole.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.HandHole.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.HandHole.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.HandHole.include=INCLUDE

#File containing the DropBox locations. (gis file name, including extension)
processInput.DropBox.fileName=IN_DropBoxs.shp

#File containing the DropBox locations. (type of input)
processInput.DropBox.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.DropBox.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.DropBox.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.DropBox.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.DropBox.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.DropBox.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.DropBox.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.DropBox.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.DropBox.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.DropBox.include=INCLUDE

#File containing the Aerial_DropBox locations. (gis file name, including extension)
processInput.Aerial_DropBox.fileName=IN_Aerial_DropBoxs.shp

#File containing the Aerial_DropBox locations. (type of input)
processInput.Aerial_DropBox.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.Aerial_DropBox.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.Aerial_DropBox.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.Aerial_DropBox.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.Aerial_DropBox.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.Aerial_DropBox.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.Aerial_DropBox.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.Aerial_DropBox.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.Aerial_DropBox.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.Aerial_DropBox.include=INCLUDE

#File containing the Cabinet locations. (gis file name, including extension)
processInput.Cabinet.fileName=IN_Cabinets.shp

#File containing the Cabinet locations. (type of input)
processInput.Cabinet.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.Cabinet.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.Cabinet.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.Cabinet.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.Cabinet.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.Cabinet.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.Cabinet.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.Cabinet.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.Cabinet.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.Cabinet.include=INCLUDE

#File containing the PrimaryCabinet locations. (gis file name, including extension)
processInput.PrimaryCabinet.fileName=IN_PrimaryCabinets.shp

#File containing the PrimaryCabinet locations. (type of input)
processInput.PrimaryCabinet.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.PrimaryCabinet.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.PrimaryCabinet.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.PrimaryCabinet.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.PrimaryCabinet.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.PrimaryCabinet.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.PrimaryCabinet.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.PrimaryCabinet.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.PrimaryCabinet.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.PrimaryCabinet.include=INCLUDE

#File containing the Antenna locations. (gis file name, including extension)
processInput.Antenna.fileName=IN_Antennas.shp

#File containing the Antenna locations. (type of input)
processInput.Antenna.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.Antenna.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.Antenna.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.Antenna.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.Antenna.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.Antenna.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.Antenna.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.Antenna.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.Antenna.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.Antenna.include=INCLUDE

#File containing the PrimaryCentralOffice locations. (gis file name, including extension)
processInput.PrimaryCentralOffice.fileName=IN_PrimaryCentralOffices.shp

#File containing the PrimaryCentralOffice locations. (type of input)
processInput.PrimaryCentralOffice.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.PrimaryCentralOffice.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.PrimaryCentralOffice.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.PrimaryCentralOffice.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.PrimaryCentralOffice.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.PrimaryCentralOffice.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.PrimaryCentralOffice.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.PrimaryCentralOffice.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.PrimaryCentralOffice.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.PrimaryCentralOffice.include=INCLUDE

#File containing the BackBoneEquipment locations. (gis file name, including extension)
processInput.BackBoneEquipment.fileName=IN_BackBoneEquipments.shp

#File containing the BackBoneEquipment locations. (type of input)
processInput.BackBoneEquipment.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.BackBoneEquipment.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.BackBoneEquipment.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.BackBoneEquipment.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.BackBoneEquipment.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.BackBoneEquipment.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.BackBoneEquipment.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.BackBoneEquipment.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.BackBoneEquipment.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.BackBoneEquipment.include=INCLUDE

#File containing the CoaxNode locations. (gis file name, including extension)
processInput.CoaxNode.fileName=IN_CoaxNodes.shp

#File containing the CoaxNode locations. (type of input)
processInput.CoaxNode.fileType=SHAPE

#Attribute name for the type of an access structure.
processInput.CoaxNode.accessStructureTypeAttribute=TYPE

#Indicates whether this aggregation node should be fiberized.
processInput.CoaxNode.hasDemand=HAS_DEMAND

#Indicates how many active PON fibers this aggregation node requires.
processInput.CoaxNode.hasDemandActivePON=PON_ACTIVE

#Indicates how many active P2P fibers this aggregation node requires.
processInput.CoaxNode.hasDemandActiveP2P=P2P_ACTIVE

#Indicates how many spare PON fibers this aggregation node requires.
processInput.CoaxNode.hasDemandSparePON=PON_SPARE

#Indicates how many spare P2P fibers this aggregation node requires.
processInput.CoaxNode.hasDemandSpareP2P=P2P_SPARE

#Attribute name for the gis tool ID.
processInput.CoaxNode.gisToolID=GISTOOL_ID

#Attribute indicating the unique ID of the access structure.
processInput.CoaxNode.accessStructureId=STRUCT_ID

#Attribute indicating whether to include the point or not.
processInput.CoaxNode.include=INCLUDE

#GIS source containing (poly)lines (gis file name, including extension)
processInput.existingCables.existingCablesfileName=IN_ExistingCables.shp

#GIS source containing (poly)lines (type of input)
processInput.existingCables.existingCablesfileType=SHAPE

#Attribute containing whether to include the line or not.
processInput.existingCables.include=INCLUDE

#Attribute name for the gis tool ID.
processInput.existingCables.gisToolID=GISTOOL_ID

#Default value for the capacity
processInput.existingCables.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.existingCables.capacity.attribute=MAX_FIBERS

#Attribute containing the subtype of the line.
processInput.existingCables.subtype=SUBTYPE

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.existingCables.avoid=AVOID

#Maximum snapping distance between a pole and a node
processInput.aerial.snappingDistance=10.0

#Maximum snapping distance between a pole and a node (unit of measurement)
processInput.aerial.snappingDistance.unit=METER

#File containing points representing utility poles. (gis file name, including extension)
processInput.aerial.poles.fileName=IN_Poles.shp

#File containing points representing utility poles. (type of input)
processInput.aerial.poles.fileType=SHAPE

#File containing (poly)lines connecting the specified poles. (gis file name, including extension)
processInput.aerial.connections.fileName=IN_AerialConnections.shp

#File containing (poly)lines connecting the specified poles. (type of input)
processInput.aerial.connections.fileType=SHAPE

#Attribute indicating whether to include the point or not.
processInput.aerial.poles.include=INCLUDE

#Attribute name for the gis tool ID.
processInput.aerial.poles.gisToolID=GISTOOL_ID

#Attribute name for existing poles.
processInput.aerial.poles.existing=EXISTING

#Attribute indicating a user defined type.
processInput.aerial.poles.identifier=IDENTIFIER

#Attribute name for locked nodes.
processInput.aerial.poles.locked=LOCKED

#Attribute name for the equipment on a pole.
processInput.aerial.poles.poleEquipmentAttribute=EQUIPMENT

#Attribute containing the subtype of the line.
processInput.aerial.connectionssubtype=SUBTYPE

#Attribute name for the gis tool ID.
processInput.aerial.connectionsgisToolID=GISTOOL_ID

#Default value for the capacity
processInput.aerial.connectionscapacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.aerial.connectionscapacity.attribute=MAX_FIBERS

#Default value for the capacity
processInput.aerial.connectionscapacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.aerial.connectionscapacity.attribute=MAX_CABLES

#Attribute containing whether this line is a crossing.
processInput.aerial.connectionscrossing=CROSSING

#Attribute containing whether to include the line or not.
processInput.aerial.connectionsinclude=INCLUDE

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.aerial.connectionsavoid=AVOID

#Attribute name for locked edges.
processInput.aerial.connectionslocked=LOCKED

#GIS source containing (poly)lines (gis file name, including extension)
processInput.facade.fileName=IN_FacadeLines.shp

#GIS source containing (poly)lines (type of input)
processInput.facade.fileType=SHAPE

#Snapping distance for lines.
processInput.facade.snappingDistance=0.01

#Snapping distance for lines. (unit of measurement)
processInput.facade.snappingDistance.unit=METER

#Boolean attribute to indicate if the line is span or regular facade.
processInput.facade.spanAttribute=SPAN

#Boolean to indicate if span lines should be simplified to a single edge
processInput.facade.simplifySpan=true

#Attribute name for the gis tool ID.
processInput.facade.gisToolID=GISTOOL_ID

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.facade.avoid=AVOID

#Attribute containing whether to include the line or not.
processInput.facade.include=INCLUDE

#Default value for the capacity
processInput.facade.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.facade.capacity.attribute=MAX_FIBERS

#Default value for the capacity
processInput.facade.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.facade.capacity.attribute=MAX_CABLES

#GIS source containing (poly)lines (gis file name, including extension)
processInput.existingPipes.fileName=IN_ExistingPipes.shp

#GIS source containing (poly)lines (type of input)
processInput.existingPipes.fileType=SHAPE

#Maximum distance when linking existing pipes to access structures.
processInput.existingPipes.accessStructureLinkDistance=10.0

#Maximum distance when linking existing pipes to access structures. (unit of measurement)
processInput.existingPipes.accessStructureLinkDistance.unit=METER

#Attribute containing the subtype of the line.
processInput.existingPipes.subtype=SUBTYPE

#Attribute name for the type of an edge.
processInput.existingPipes.edgeType=STRUCT_IDS

#Default value for the capacity
processInput.existingPipes.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.existingPipes.capacity.attribute=MAX_CABLES

#Default value for the capacity
processInput.existingPipes.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.existingPipes.capacity.attribute=MAX_DUCTS

#Default value for the capacity
processInput.existingPipes.capacity.value=Infinity

#Attribute containing the total capacity of the line.
processInput.existingPipes.capacity.attribute=MAX_DIAM

#Attribute name for the gis tool ID.
processInput.existingPipes.gisToolID=GISTOOL_ID

#Attribute containing whether to include the line or not.
processInput.existingPipes.include=INCLUDE

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.existingPipes.avoid=AVOID

#Name of the attribute containing the duct class.
processInput.existingPipes.ductClass=DUCT_CLASS

#The GIS file containing the nodes of the non fiber network. (gis file name, including extension)
processInput.copperLines.coax.nodeFilefileName=IN_NonFiberEquipment.shp

#The GIS file containing the nodes of the non fiber network. (type of input)
processInput.copperLines.coax.nodeFilefileType=SHAPE

#The GIS file containing the edges connecting the nodes of the non fiber network. (gis file name, including extension)
processInput.copperLines.coax.edgeFilefileName=IN_NonFiberCables.shp

#The GIS file containing the edges connecting the nodes of the non fiber network. (type of input)
processInput.copperLines.coax.edgeFilefileType=SHAPE

#The distance at which a copper edge may be associated with a customer, a LEX or existing equipment.
processInput.copperLines.coax.projectionDistance=1.0

#The distance at which a copper edge may be associated with a customer, a LEX or existing equipment. (unit of measurement)
processInput.copperLines.coax.projectionDistance.unit=METER

#Attribute indicating the Type of the equipment.
processInput.copperLines.coax.nodeAttributes.coaxType=TYPE

#Attribute indicating a user defined type.
processInput.copperLines.coax.nodeAttributes.identifier=IDENTIFIER

#Attribute indicating the ids of the out connection.
processInput.copperLines.coax.nodeAttributes.CopperPort=PORT

#Attribute indicating whether to include the point or not.
processInput.copperLines.coax.nodeAttributes.include=INCLUDE

#Attribute indicating the status of a tap as power passing.
processInput.copperLines.coax.nodeAttributes.powerPass=POWER_PASS

#Attribute name for the gis tool ID.
processInput.copperLines.coax.nodeAttributes.gisToolID=GISTOOL_ID

#Attribute name for the identifier of a copper edge.
processInput.copperLines.coax.edgeAttributes.coaxID=NF_ID

#Attribute containing the identifier of edges.
processInput.copperLines.coax.edgeAttributes.identifier=IDENTIFIER

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.copperLines.coax.edgeAttributes.avoid=AVOID

#Attribute name for the type of an edge.
processInput.copperLines.coax.edgeAttributes.edgeType=TYPE

#Attribute containing whether to include the line or not.
processInput.copperLines.coax.edgeAttributes.include=INCLUDE

#Attribute name for the gis tool ID.
processInput.copperLines.coax.edgeAttributes.gisToolID=GISTOOL_ID

#Attribute name for the amount of loss per meter over the copper edge.
processInput.copperLines.coax.edgeAttributes.copperLoss=LOSS

#Attribute name for the physical length of a Copper cable.
processInput.copperLines.coax.edgeAttributes.copperLength=NF_LENGTH

#Attribute that indicates whether a new cable may be placed over this edge.
processInput.copperLines.coax.edgeAttributes.blockedEdge=BLOCKED

#The GIS file containing the edges connecting the nodes of the non fiber network. (gis file name, including extension)
processInput.copperLines.twisted.edgeFilefileName=IN_NonFiberCables.shp

#The GIS file containing the edges connecting the nodes of the non fiber network. (type of input)
processInput.copperLines.twisted.edgeFilefileType=SHAPE

#The distance at which a copper node may be associated with an edge when the id based connection fails.
processInput.copperLines.twisted.projectionDistance=1.0

#The distance at which a copper node may be associated with an edge when the id based connection fails. (unit of measurement)
processInput.copperLines.twisted.projectionDistance.unit=METER

#Snapping distance for lines.
processInput.copperLines.twisted.snappingDistance=0.01

#Snapping distance for lines. (unit of measurement)
processInput.copperLines.twisted.snappingDistance.unit=METER

#Attribute name for the gis tool ID.
processInput.copperLines.twisted.gisToolID=GISTOOL_ID

#Attribute name for the type of an edge.
processInput.copperLines.twisted.edgeType=TYPE

#Attribute containing whether to include the line or not.
processInput.copperLines.twisted.include=INCLUDE

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.copperLines.twisted.avoid=AVOID

#Attribute name for the amount of loss per meter over the copper edge.
processInput.copperLines.twisted.copperLoss=LOSS

#Attribute name for the physical length of a Copper cable.
processInput.copperLines.twisted.copperLength=NF_LENGTH

#GIS source containing specified drop routes as (poly)lines (gis file name, including extension)
processInput.drop.fileName=IN_DropTrenches.shp

#GIS source containing specified drop routes as (poly)lines (type of input)
processInput.drop.fileType=SHAPE

#Connect the drop trenches to street-side possible trenches.
processInput.drop.connect.trenches=true

#Connect the drop trenches to existing pipes.
processInput.drop.connect.pipes=true

#Connect the drop trenches (lead-ins) to existing equipment (e.g. structures).
processInput.drop.connect.equipment=true

#Snapping distance for lead-ins.
processInput.drop.snappingDistance=0.1

#Snapping distance for lead-ins. (unit of measurement)
processInput.drop.snappingDistance.unit=METER

#Attribute name for the gis tool ID.
processInput.drop.gisToolID=GISTOOL_ID

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.drop.avoid=AVOID

#Name of the attribute containing the duct class.
processInput.drop.ductClass=DUCT_CLASS

#Attribute containing the subtype of the line.
processInput.drop.subtype=SUBTYPE

#Attribute containing whether to include the line or not.
processInput.drop.include=INCLUDE

#Attribute name for locked edges.
processInput.drop.locked=LOCKED

#GIS source containing specified aerial drop connections as (poly)lines (gis file name, including extension)
processInput.aerialDrop.fileName=IN_AerialDropConnections.shp

#GIS source containing specified aerial drop connections as (poly)lines (type of input)
processInput.aerialDrop.fileType=SHAPE

#Snapping distance for input lines to poles or demand points.
processInput.aerialDrop.snappingDistance=5.0

#Snapping distance for input lines to poles or demand points. (unit of measurement)
processInput.aerialDrop.snappingDistance.unit=METER

#Boolean to decide if customers can have more than one drop.
processInput.aerialDrop.multipleDropsPerCustomer=false

#Attribute containing the subtype of the line.
processInput.aerialDrop.subtype=SUBTYPE

#Attribute name for the gis tool ID.
processInput.aerialDrop.gisToolID=GISTOOL_ID

#Attribute containing whether to include the line or not.
processInput.aerialDrop.include=INCLUDE

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.aerialDrop.avoid=AVOID

#Attribute name for locked edges.
processInput.aerialDrop.locked=LOCKED

#GIS source containing specified facade drop routes as (poly)lines (gis file name, including extension)
processInput.facadeDrop.fileName=IN_FacadeDropLines.shp

#GIS source containing specified facade drop routes as (poly)lines (type of input)
processInput.facadeDrop.fileType=SHAPE

#Length of the transition created to a structure
processInput.facadeDrop.transitionNodeDistance=0.1

#Length of the transition created to a structure (unit of measurement)
processInput.facadeDrop.transitionNodeDistance.unit=METER

#Attribute containing the subtype of the line.
processInput.facadeDrop.subtype=SUBTYPE

#Attribute name for the gis tool ID.
processInput.facadeDrop.gisToolID=GISTOOL_ID

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.facadeDrop.avoid=AVOID

#Attribute name for locked edges.
processInput.facadeDrop.locked=LOCKED

#GIS source containing (poly)lines that represents transitions. (gis file name, including extension)
processInput.transitions.fileName=IN_Transitions.shp

#GIS source containing (poly)lines that represents transitions. (type of input)
processInput.transitions.fileType=SHAPE

#The maximum tolerance when snapping a transition to an existing node.
processInput.transitions.maxSnappingDistance=0.5

#The maximum tolerance when snapping a transition to an existing node. (unit of measurement)
processInput.transitions.maxSnappingDistance.unit=METER

#The maximum tolerance when projecting a transition onto an existing edge.
processInput.transitions.maxProjectionDistance=1.0

#The maximum tolerance when projecting a transition onto an existing edge. (unit of measurement)
processInput.transitions.maxProjectionDistance.unit=METER

#Duplicate node offset to apply when nodes are located on top of one another.
processInput.transitions.duplicatedNodeOffset=0.15

#Duplicate node offset to apply when nodes are located on top of one another. (unit of measurement)
processInput.transitions.duplicatedNodeOffset.unit=METER

#Attribute containing whether a line should be avoided or not and in which layer.
processInput.transitions.avoid=AVOID

#Attribute containing whether to include the line or not.
processInput.transitions.include=INCLUDE

#Attribute name for the gis tool ID.
processInput.transitions.gisToolID=GISTOOL_ID

#Default value for the capacity
processInput.transitions.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.transitions.capacity.attribute=MAX_FIBERS

#Default value for the capacity
processInput.transitions.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.transitions.capacity.attribute=MAX_CABLES

#Default value for the capacity
processInput.transitions.capacity.value=2147483647

#Attribute containing the total capacity of the line.
processInput.transitions.capacity.attribute=MAX_DUCTS

#Create transition where pipe overlaps with buried trench.
processInput.transitions.overlap.toTrench=true

#Create transition where pipe overlaps with buried lead-in.
processInput.transitions.overlap.toLeadIn=false

#Create transition where pipe overlaps with other pipe.
processInput.transitions.overlap.toPipe=true

#Maximum distance of UG edges. Enables placing manholes or handholes along long lines.
processInput.cleanup.splitMaximumDistance=50.0

#Maximum distance of UG edges. Enables placing manholes or handholes along long lines. (unit of measurement)
processInput.cleanup.splitMaximumDistance.unit=METER

#Whether to break up existing pipes, allowing the placing of manholes or handholes.
processInput.cleanup.splitExistingPipes=false

#Whether to break edges that have a non null GISTOOL_ID allowing the placing of manhole or handholes.
processInput.cleanup.doNotSplitGistoolID=false

#The priority for trench duct class attributes to be inherited by transitions. Highest positive value means highest priority, and negative values mean that all edges with a type that has un-set or positive priority values will be prioritized over this edge. In the event of ties, default priority goes trenches, existing pipes, and then underground lead-ins.
processInput.cleanup.ductClassCleanup.trenchPriority=0

#The priority for existing pipe duct class attributes to be inherited by transitions. Highest value means highest priority, and negative values mean that all edges with a type that has un-set or positive priority values will be prioritized over this edge. In the event of ties, default priority goes trenches, existing pipes, and then underground lead-ins.
processInput.cleanup.ductClassCleanup.pipesPriority=0

#The priority for underground lead-in duct class attributes to be inherited by transitions, and negative values mean that all edges with a type that has un-set or positive priority values will be prioritized over this type. In the event of ties, default priority goes trenches, existing pipes, and then underground lead-ins.
processInput.cleanup.ductClassCleanup.undergroundLeadInPriority=0

#Do not allow outgoing edges from Customer Nodes.
processInput.connectivity.customersAreBlocking=true

#Track the Feature ID from all GIS sources.
processInput.featureID.enabled=true

